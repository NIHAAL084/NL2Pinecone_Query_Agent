[project]
name = "nl2pinecone-query-agent"
version = "1.0.0"
description = "Production-ready AI agent for converting natural language to Pinecone queries using Google Gemini AI with comprehensive testing and batch processing"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Nihaal Anupoju", email = "nihaal.a084@gmail.com" }]
maintainers = [{ name = "Nihaal Anupoju", email = "nihaal.a084@gmail.com" }]
keywords = [
    "ai",
    "nlp",
    "pinecone",
    "vector-database",
    "gemini",
    "natural-language",
    "query-agent",
    "batch-processing",
    "fastapi",
    "production-ready",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Database :: Database Engines/Servers",
]

dependencies = [
    "google-generativeai>=0.3.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.2",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "pinecone-client>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "requests>=2.31.0",
]
lint = ["black>=23.0.0", "ruff>=0.1.0", "mypy>=1.5.0", "types-requests>=2.31.0"]

[project.urls]
Homepage = "https://github.com/yourusername/nl2pinecone-query-agent"
Repository = "https://github.com/yourusername/nl2pinecone-query-agent.git"
Issues = "https://github.com/yourusername/nl2pinecone-query-agent/issues"
Documentation = "https://github.com/yourusername/nl2pinecone-query-agent#readme"
Changelog = "https://github.com/yourusername/nl2pinecone-query-agent/releases"

[project.scripts]
nl2pinecone-agent = "app:main"
nl2pinecone-test = "test_batch:main"
nl2pinecone-samples = "test_samples:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.hatch.build.targets.wheel.sources]
"nl2pinecone_agent.py" = "nl2pinecone_agent.py"
"app.py" = "app.py"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
]
package = true

[tool.uv.sources]
# Add any specific sources if needed

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "S",  # flake8-bandit
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "S101", # use of assert detected
    "N806", # variable in function should be lowercase
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"test_*.py" = ["S101"] # Allow asserts in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--disable-warnings",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = [".", "nl2pinecone_agent", "app"]
omit = ["*/tests/*", "*/test_*", "*/.venv/*", "*/venv/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
